# -*- coding: utf-8 -*-
"""Masking code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14LVqONz1W-gCgcjlHE8gNAoaLiRWvinB
"""

import os
import random
import numpy as np
import pandas as pd
import time
from PIL import Image
import cv2
import matplotlib.pyplot as plt

import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
import torchvision
from torchvision import transforms,utils,datasets
from torch.autograd import Variable
from torch.utils.data import Dataset,DataLoader
from IPython.display import clear_output

# use this for Sampling Ratio of 20%
MASK = 'radial'
MASK_PERCENT = '20'

train_transforms = transforms.Compose([
		# transforms.ToPILImage(),
		transforms.RandomHorizontalFlip(),
		transforms.RandomVerticalFlip(),
		transforms.RandomRotation(90, fill=0),
		transforms.RandomCrop(244),
		transforms.Pad(6),
		transforms.ToTensor()
	])

# use this for Sampling Ratio of 30%
MASK = 'radial'
MASK_PERCENT = '30'

train_transforms = transforms.Compose([
		# transforms.ToPILImage(),
		transforms.RandomHorizontalFlip(),
		transforms.RandomVerticalFlip(),
		transforms.RandomRotation(90, fill=0),
		transforms.RandomCrop(244),
		transforms.Pad(6),
		transforms.ToTensor()
	])

# use this for Sampling Ratio of 50%
MASK = 'radial'
MASK_PERCENT = '50'

train_transforms = transforms.Compose([
		# transforms.ToPILImage(),
		transforms.RandomHorizontalFlip(),
		transforms.RandomVerticalFlip(),
		transforms.RandomRotation(90, fill=0),
		transforms.RandomCrop(244),
		transforms.Pad(6),
		transforms.ToTensor()
	])

